<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>H.y's Blog</title><link href="http://hyhx2008.github.com/" rel="alternate"></link><link href="http://hyhx2008.github.com/feeds/tech.atom.xml" rel="self"></link><id>http://hyhx2008.github.com/</id><updated>2013-05-29T20:23:00+09:00</updated><entry><title>windows下安装pelican</title><link href="http://hyhx2008.github.com/windowsxia-an-zhuang-pelican.html" rel="alternate"></link><updated>2013-05-29T20:23:00+09:00</updated><author><name>hyhx2008</name></author><id>tag:hyhx2008.github.com,2013-05-29:windowsxia-an-zhuang-pelican.html</id><summary type="html">&lt;p&gt;用虚拟机在ubuntu下写了这么久的博客，实在是受不了电脑内存不够，一开虚拟机就开始卡的情况。&lt;/p&gt;
&lt;p&gt;原来一直懒得搞，因为在linux下安装程序很方便。今天尝试了一下在windows下安装pelican，其实也不是很烦。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.安装python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pelican是用python开发的，所以首先要在windows下安装python。&lt;/p&gt;
&lt;p&gt;在python官网上下载python安装包:
&lt;a class="reference external" href="http://www.python.org/download/"&gt;Download Python&lt;/a&gt;
。我是win8-64bit，所以选择Python3.3.2Windows X86-64 MSI Installer。安装的过程是全自动的，只需要选择路径和点下一步即可。&lt;/p&gt;
&lt;p&gt;安装的过程中会询问是否将python添加到环境变量中，为了可以直接在cmd(命令提示符)中使用python命令，建议选是。如果不小心选错了，也可以手动
将python添加到环境变量中去。在path中加入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;C:\Python33\Scripts;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;即可(此处路径为示例，有可能不一样)。&lt;/p&gt;
&lt;p&gt;可以在cmd中输入python查看是否安装成功。(ctrl+c退出)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.安装pip&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pip是一个帮助我们安装和管理python包的工具，我们通过pip来安装pelican。&lt;/p&gt;
&lt;p&gt;首先在
&lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;Download pip&lt;/a&gt;
下载pip。&lt;/p&gt;
&lt;p&gt;然后解压下载的压缩包，例如pip-1.3.1.tar.gz。运行cmd并进入解压目录，输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;python setup.py install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样pip就安装完成了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.安装pelican&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有了pip再安装pelican就很容易了，只需要一条命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;pip install pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样我们就在windows上安装了pelican。以后写博客就不再需要linux环境了。&lt;/p&gt;
&lt;p&gt;如果不是很熟悉windows的cmd命令，这里推荐使用
&lt;a class="reference external" href="http://www.cygwin.com/"&gt;cygwin&lt;/a&gt;
。它可以在windows上模拟unix环境，并且可以安装大部分常用的
工具及软件，比如git。安装完成后添加至环境变量，就可以在windows的cmd中使用linux的命令了。&lt;/p&gt;
</summary><category term="pelican"></category><category term="github"></category></entry><entry><title>让google和百度检索自己的网站</title><link href="http://hyhx2008.github.com/rang-googlehe-bai-du-jian-suo-zi-ji-de-wang-zhan.html" rel="alternate"></link><updated>2012-11-18T23:58:00+09:00</updated><author><name>hyhx2008</name></author><id>tag:hyhx2008.github.com,2012-11-18:rang-googlehe-bai-du-jian-suo-zi-ji-de-wang-zhan.html</id><summary type="html">&lt;p&gt;自从建立起github博客也有两个星期了，但是在google上一直搜索不到自己的博客。&lt;/p&gt;
&lt;p&gt;等了这么久google还没有抓取我的博客内容。今天问了马星这个问题，马星又早就把解决办法贴在他的
&lt;a class="reference external" href="http://x-wei.github.com/add-google-custom-search.html"&gt;blog&lt;/a&gt;
上了。。&lt;/p&gt;
&lt;p&gt;其实可以主动向搜索引擎申请检索自己的网站，申请链接如下:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.google.com/addurl/?hl=zh-CN&amp;amp;continue=/addurl"&gt;google: http://www.google.com/addurl/?hl=zh-CN&amp;amp;continue=/addurl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.baidu.com/search/url_submit.html"&gt;baidu: http://www.baidu.com/search/url_submit.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;填写自己的网址即可。&lt;/p&gt;
&lt;p&gt;(问完马星才发现google好像几天前已经检索了我的博客内容。。。)&lt;/p&gt;
&lt;p&gt;马星那那篇
&lt;a class="reference external" href="http://x-wei.github.com/add-google-custom-search.html"&gt;blog&lt;/a&gt;
上还讲了如何添加google自定义搜索，不过要使用bootsrap2主题。。&lt;/p&gt;
&lt;p&gt;我瞎折腾了一会儿，也在左边添加了个畸形的自定义搜索框。。。&lt;/p&gt;
&lt;p&gt;The End！！&lt;/p&gt;
</summary><category term="google"></category><category term="baidu"></category></entry><entry><title>VMware虚拟机启动时总提示cann't connect to floopy0的问题</title><link href="http://hyhx2008.github.com/vmwarexu-ni-ji-qi-dong-shi-zong-ti-shi-cannt-connect-to-floopy0de-wen-ti.html" rel="alternate"></link><updated>2012-11-13T17:26:00+09:00</updated><author><name>hyhx2008</name></author><id>tag:hyhx2008.github.com,2012-11-13:vmwarexu-ni-ji-qi-dong-shi-zong-ti-shi-cannt-connect-to-floopy0de-wen-ti.html</id><summary type="html">&lt;p&gt;在VMware中装了ubuntu，启动时总提示不能连接到设备floopy0，关也关不掉，很讨厌。&lt;/p&gt;
&lt;p&gt;百度了一下解决办法: 修改虚拟机的.vmx文件。&lt;/p&gt;
&lt;p&gt;1.将floppy0.autodetect这项改为FALSE:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;floppy0.autodetect = &amp;quot;FALSE&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.添加一句:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;floppy0.startConnected = &amp;quot;FALSE&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The End!!&lt;/p&gt;
</summary><category term="ubuntu"></category><category term="VMware"></category></entry><entry><title>使用pelican生成github博客</title><link href="http://hyhx2008.github.com/shi-yong-pelicansheng-cheng-githubbo-ke.html" rel="alternate"></link><updated>2012-11-11T22:20:00+09:00</updated><author><name>hyhx2008</name></author><id>tag:hyhx2008.github.com,2012-11-11:shi-yong-pelicansheng-cheng-githubbo-ke.html</id><summary type="html">&lt;p&gt;自从马星给我推荐在github上写博客到现在已经好久了，今天我终于算是学会了。
我看人家都是用jekyll生成静态页面的，果然和专业到技术宅差得太多，自己尝试折腾了一天也没弄出什么名堂。
马星觉得自己很菜，我居然比马星还菜。。。。。
在马星的诱惑下，用了这个不知到他从哪找来的工具，说实话倒是挺好用的。&lt;/p&gt;
&lt;p&gt;这里记录一下生成博客的步骤（以下内容大多copy自
&lt;a class="reference external" href="http://x-wei.github.com/pelican_github_blog.html"&gt;马星的blog&lt;/a&gt;
）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.配置git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注册github后首先要配置git。可以参考
&lt;a class="reference external" href="https://help.github.com/articles/set-up-git#platform-linux"&gt;github:help:set up git&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;设置用户名和邮箱，邮箱为注册github时的邮箱地址。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;git config --global user.name &lt;span class="s2"&gt;&amp;quot;hy&amp;quot;&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt;git config --global user.email &lt;span class="s2"&gt;&amp;quot;hyxxxxxx@163.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以用下面的命令查看配置。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;git config -l
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;github上说可以用https方法提交工程，但是没有成功过，所以还是需要利用ssh。这里需要生成ssh keys，
具体步骤参考
&lt;a class="reference external" href="https://help.github.com/articles/generating-ssh-keys#platform-linux"&gt;github:help:generating ssh keys&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;然后就可以进行git clone 和 git push等操作了。&lt;/p&gt;
&lt;p&gt;(后来在实验室的电脑上实验了一下，https居然成功了，嫌ssh麻烦的同学可以参考
&lt;a class="reference external" href="https://help.github.com/articles/set-up-git"&gt;github:help:HTTPS method&lt;/a&gt;
)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.生成github page&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要在github上新建一个仓库(repository)，这个仓库的名称必须为
&lt;strong&gt;your_id.github.com&lt;/strong&gt;
。然后将一个index.html文件上传到master分支后，就可以访问域名your_id.github.com看到自己的主页了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.安装和使用pelican&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pelican安装需要用到python-pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;sudo aptitude install python-pip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后再用pip安装python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;sudo pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样pelican就安装完成了。&lt;/p&gt;
&lt;p&gt;pelican的使用也很简单, 需要在仓库根目录下新建一个配置文件settings.py, 内容大概如下所示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Tokyo&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zhs&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;H.y&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hyhx2008&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hysblog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/hyhx2008&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://hyhx2008.github.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;UA-36075477-1&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#TAG_FEED_ATOM = &amp;#39;feeds/%s.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAG_CLOUD_STEPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#DEFAULT_ORPHANS=3&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tech&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;./pelican-themes/bootstrap&amp;#39;&lt;/span&gt;


&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;x-wei&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://x-wei.github.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;farseerfc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://farseerfc.github.com/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                          &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/hyhx2008&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;各项的含义可以参见
&lt;a class="reference external" href="https://pelican.readthedocs.org/en/2.8/settings.html"&gt;pelican:settings&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;settings.py中有一项PAHT=`posts`, 指的是放置reST格式文件的目录，所以新建一个posts文件夹，然后将博客用
&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reST&lt;/a&gt;
格式写好之后放在posts文件夹下，即可用pelican生成静态页面了。在仓库根目录下用:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;pelican -s settings.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后就可以看到生成的index.html了。&lt;/p&gt;
&lt;p&gt;pelican还可以使用现成的模版，主题可以在github上下载:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;git clone https://github.com/farseerfc/pelican-themes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;settings.py中的THEME项用来指定要使用的主题模版。&lt;/p&gt;
&lt;p&gt;如果和我一样觉得麻烦的话，可以在github上clone一个现成的博客修改学习，比如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;git clone git@github.com:hyhx2008/hyhx2008.github.com.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4.将博客上传到github&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用以下三条命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;git add .
&lt;span class="gp"&gt;$&lt;/span&gt;git commit -a -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;收到一封页面修改成功的邮件后，就可以到自己的主页 your_id.github.com 查看了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.关于reST格式文件的编辑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pelican支持markdown和reST两种格式，由于reST的语法高亮比较容易，马星推荐我使用这个格式。附上两个教程:
&lt;a class="reference external" href="https://beinggeekbook.readthedocs.org/en/latest/rst.html"&gt;中文教程&lt;/a&gt;
,
&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;官方英文教程&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;在linux环境下可以使用具有实时预览功能的ReText编辑器编辑reST文件，但是后来发现vim中支持reST文件的语法高亮，写起来也挺方便的。&lt;/p&gt;
&lt;p&gt;The End!&lt;/p&gt;
</summary><category term="github"></category><category term="pelican"></category></entry></feed>